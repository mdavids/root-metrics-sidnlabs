- name: Set up the machine as root
  hosts: c07
  remote_user: "{{ superuser }}"
  become_user: root
  become: yes
  tasks:
  - name: Initialize apt
    apt:
      update_cache: true
  - name: Do the apt upgrade
    apt:
      upgrade: full
      force: true
  - name: Install all the needed packages
    apt:
      pkg: [acl, build-essential, curl, git, libcap-dev, libgetdns-dev, libidn11-dev, libldns-dev, libssl-dev, libtool, libtool-bin, libunbound-dev, libuv1-dev,
        man, pkg-config, postgresql, pyflakes3, python3-psycopg2, python3-paramiko, python3-pip, rsync, unzip]
  - name: Put .bashrc for root
    copy:
      src: ../bashrc-for-metrics-and-root
      dest: /root/.bashrc
  - name: Replace sshd_config
    copy:
      src: ../etc_sshd_config_shorter
      dest: /etc/ssh/sshd_config
  - name: Restart sshd after changing the config
    systemd:
      state: restarted
      name: sshd.service
      daemon_reload: yes      
  - name: Set timezone to UTC
    shell:
      cmd: "timedatectl set-timezone UTC"
  - name: Make user 'metrics'
    user: 
      name: metrics
      home: /home/metrics
      shell: /bin/bash
  - name: Copy the .psqlrc to make display easier
    copy:
      src: ../dot-psqlrc
      dest: /root/.psqlrc
      mode: a+r
  - name: Initialize Postgres for metrics
    become_user: postgres
    become: true
    postgresql_user:
      name: metrics
      role_attr_flags: CREATEDB,NOSUPERUSER
- name: Install things as metrics
  hosts: c07  
  remote_user: "{{ superuser }}"
  become: true
  become_user: metrics
  tasks:
  - name: Put .bashrc for metrics
    template:
      src: ../bashrc-for-metrics-and-root
      dest: /home/metrics/.bashrc
  - name: Make .ssh for metrics
    file:
      path: /home/metrics/.ssh
      state: directory
      mode: go-rwx
  - name: Copy metrics public key
    copy:
      src: ../Local/metrics_id_rsa.pub
      dest: /home/metrics/.ssh/id_rsa.pub
      mode: go-rwx
  - name: Copy metrics private key
    copy:
      src: ../Local/metrics_id_rsa
      dest: /home/metrics/.ssh/id_rsa
      mode: go-rwx
  - name: Turn off hashing of names in known_hosts
    copy:
      src: ../home_ssh_config
      dest: /home/metrics/.ssh/config
      mode: go-rwx
  - name: Copy the .psqlrc to make display easier
    copy:
      src: ../dot-psqlrc
      dest: /home/metrics/.psqlrc
      mode: a+r
  - name: Get our empty version of known_hosts; it will be added to as VPs are added
    copy:
      src: ../vp_known_hosts
      dest: /home/metrics/.ssh/known_hosts
      mode: go-rwx
  - name: make Incoming/
    file:
      path: /home/metrics/Incoming
      state: directory
  - name: make Logs/
    file:
      path: /home/metrics/Logs
      state: directory
  - name: Put vp_list.txt
    copy:
      src: ../vp_list.txt
      dest: /home/metrics/vp_list.txt
  - name: Pull or freshen the Github repo
    git:
      repo: 'https://github.com/icann/root-metrics-sidnlabs.git'
      dest: /home/metrics/repo
      version: main     # no-transfer-user
  - name: get dnspython
    shell:
      cmd: "pip3 install --user dnspython || pip3 install --break-system-packages --user dnspython"
      creates: /home/metrics/.local/lib/python3.9/site-packages/dns
  - name: crontab entry for get_root_zone.py
    cron:   # [mba] [wca]
      disabled: yes
      name: Get the new root zone
      minute: "0,15,30,45"
      job: "/home/metrics/repo/get_root_zone.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
  - name: crontab entry for copy_files_from_vps.py
    cron:
      disabled: yes
      name: Get the files from the VPs
      minute: "1,16,31,46"
      job: "/home/metrics/repo/copy_files_from_vps.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
  - name: crontab entry for collector_processing.py
    cron:
      disabled: yes
      name: Do all the processing
      minute: "5"
      job: "/home/metrics/repo/collector_processing.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
- name: Do Postgres stuff
  hosts: c07
  remote_user: "{{ superuser }}"
  become: true
  become_user: metrics
  tasks:
  - name: Create first database
    postgresql_db:
      login_user: metrics
      name: metrics
  - name: Create table for files gotten
    postgresql_table:
      login_user: metrics
      db: metrics
      name: files_gotten
      columns:
      - filename_short text
      - processed_at timestamp
      - version int
      - delay int
      - elapsed int
  - name: Create index in files_gotten table
    postgresql_idx:
      login_user: metrics
      db: metrics
      table: files_gotten
      columns: filename_short
      name: filename_short_idx
      idxtype: btree
  - name: Create table for SOA and correctness records
    postgresql_table:
      login_user: metrics
      db: metrics
      name: record_info
      columns:
      - filename_record text
      - date_derived timestamp
      - target text
      - internet text
      - transport text
      - ip_addr text
      - record_type text
      - query_elapsed real
      - timeout text
      - soa_found text
      - likely_soa text
      - is_correct text
      - failure_reason text
  - name: Create index in record_info table
    postgresql_idx:
      login_user: metrics
      db: metrics
      table: record_info
      columns: filename_record
      name: filename_record_idx
      idxtype: btree
  - name: Create table for incorrectness records
    postgresql_table:
      login_user: metrics
      db: metrics
      name: incorrect
      columns:
      - filename_record text
      - root_checked text
      - has_been_checked boolean
      - failure_reason text
  - name: Create index in incorrectness table
    postgresql_idx:
      login_user: metrics
      db: metrics
      table: incorrect
      columns: filename_record
      name: filename_record_idx
      idxtype: btree
