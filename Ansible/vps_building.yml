- name: Set up the machine as root
  hosts: all_vps  
  remote_user: "{{ superuser }}"
  become_user: root
  become: yes
  tasks:
  - name: Initialize apt
    apt:
      update_cache: true
  - name: Do the apt upgrade
    apt:
      upgrade: full
      force: true
  - name: Install all the needed packages
    apt:
      pkg: [build-essential, acl, curl, git, joe, libldns-dev, libpcap-dev, libssl-dev, libyaml-perl, man, mc, pkg-config,
        pyflakes3, python3-pip, python3-requests, rsync, scamper, sudo, traceroute, unzip, zlib1g-dev]
  - name: Put .bashrc for root
    copy:
      src: ../bashrc-for-metrics-and-root
      dest: /root/.bashrc
  - name: Replace sshd_config
    copy:
      src: ../etc_sshd_config_shorter
      dest: /etc/ssh/sshd_config
  - name: Restart sshd after changing the config
    systemd:
      state: restarted
      name: sshd.service
      daemon_reload: yes      
  - name: Set timezone to UTC
    shell:
      cmd: "timedatectl set-timezone UTC"
  - name: Make user 'metrics'
    user:
      name: metrics
      home: /home/metrics
      shell: /bin/bash
  - name: Turn of TCP Fast Open (TFO) [zbf] [jbt]
    sysctl:
      name: net.ipv4.tcp_fastopen
      value: '0'
      state: present
- name: Set up metrics user
  hosts: all_vps
  remote_user: "{{ superuser }}"
  become_user: metrics
  become: yes
  tasks:
  - name: Set up id_rsa for metrics
    authorized_key:
      user: metrics
      key: "{{ lookup('file', '../Local/metrics_id_rsa.pub') }}"
  - name: Put .bashrc for metrics
    copy:
      src: ../bashrc-for-metrics-and-root
      dest: /home/metrics/.bashrc
  - name: Put short-host-name.txt
    template:
      src: ../short-host-name.txt
      dest: /home/metrics/short-host-name.txt
  - name: make Routing/
    file:
      path: /home/metrics/Routing
      mode: u+wrx,go+rx
      state: directory
  - name: make Output/
    file:
      path: /home/metrics/Output
      mode: u+wrx,go+rx
      state: directory
  - name: make Logs/
    file:
      path: /home/metrics/Logs
      mode: u+wrx,go+rx
      state: directory
  - name: make Source/
    file:
      path: /home/metrics/Source
      mode: u+wrx,go+rx
      state: directory
  - name: make Target/
    file:
      path: /home/metrics/Target
      mode: u+wrx,go+rx
      state: directory
  - name: make Captures/
    file:
      path: /home/metrics/Captures
      mode: u+wrx,go+rx
      state: directory
  - name: Get dnscap tarball
    get_url:
      url: https://www.dns-oarc.net/files/dnscap/dnscap-2.0.1.tar.gz
      dest: /home/metrics/Source/dnscap-2.0.1.tar.gz
  - name: Expand dnscap tarball
    unarchive:
      remote_src: yes
      src: /home/metrics/Source/dnscap-2.0.1.tar.gz
      dest: /home/metrics/Source
      creates: /home/metrics/Source/dnscap-2.0.1
  - name: Make dnscap
    shell:
      chdir: /home/metrics/Source/dnscap-2.0.1
      cmd: "./configure --prefix=/home/metrics/Target; make install"
      creates: /home/metrics/Target/bin/dnscap
  - name: Get dnspython
    shell:
      cmd: "pip3 install --user dnspython || pip3 install --break-system-packages --user dnspython"
      creates: /home/metrics/.local/lib/python3.7/site-packages/dns
  - name: Pull or freshen the Github repo
    git:
      repo: 'https://github.com/icann/root-metrics-sidnlabs.git'
      dest: /home/metrics/repo
      version: main
  - name: Run "get_root_zone.py --vp" immediately if needed
    shell:
      cmd: "/home/metrics/repo/get_root_zone.py --vp"
      creates: /home/metrics/Logs/root-auth-rrs.pickle
  - name: Give the crontab entry for get_root_zone.py
    cron:
      disabled: no
      name: Get the new root zone
      minute: "1,16,31,46"
      job: "/home/metrics/repo/get_root_zone.py --vp >>/home/metrics/Logs/cron-alert.txt 2>&1"
  - name: Give the crontab entry for vantage_point_metrics.py
    cron:   # [mba] [wca]
      name: Get measurements
      minute: "0-59/5"
      job: "/home/metrics/repo/vantage_point_metrics.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
- name: Create and start rc.local after making dnscap
  hosts: NONE  
  remote_user: "{{ superuser }}"
  become_user: root
  become: yes
  tasks:
  - name: Put /etc/rc.local
    copy:
      src: ../rc-local-for-metrics
      dest: /etc/rc.local
      mode: u+x
  - name: Enable and start new rc.local
    ansible.builtin.systemd:
      name: rc-local
      enabled: yes
      daemon_reload: yes
      state: started
